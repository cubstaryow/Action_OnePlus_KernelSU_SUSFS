name: Build SukiSU Ultra

on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "ÂàÜÊîØÔºàSoCÂπ≥Âè∞Ôºâ"
        type: choice
        required: true
        default: sm8550
        options:
          - sm7550
          - sm7675
          - sm8450
          - sm8475
          - sm8550
          - sm8650
          - sm8750
      FEIL:
        description: "ÈÖçÁΩÆÊñá‰ª∂"
        type: choice
        required: true
        default: oneplus_ace3_v
        options:
          - oneplus_nord_ce4_v
          - oneplus_ace_3v_v
          - oneplus_nord_4_v
          - oneplus_10_pro_v
          - oneplus_10t_v
          - oneplus_11r_v
          - oneplus_ace2_v
          - oneplus_ace_pro_v
          - oneplus_11_v
          - oneplus_12r_v
          - oneplus_ace2pro_v
          - oneplus_ace3_v
          - oneplus_open_v
          - oneplus12_v
          - oneplus_13r
          - oneplus_ace3_pro_v
          - oneplus_ace5
          - oneplus_pad2_v
          - oneplus_13
          - oneplus_ace5_pro
          - oneplus_13t
      CPUD:
        description: "Â§ÑÁêÜÂô®‰ª£Âè∑"
        type: choice
        required: true
        default: kalama
        options:
          - crow
          - waipio
          - kalama
          - pineapple
          - sun
      ANDROID_VERSION:
        description: "ÂÜÖÊ†∏ÂÆâÂçìÁâàÊú¨"
        type: choice
        required: true
        default: android13
        options:
          - android12
          - android13
          - android14
          - android15
      KERNEL_VERSION:
        description: "ÂÜÖÊ†∏ÁâàÊú¨"
        type: choice
        required: true
        default: "5.15"
        options:
          - "5.10"
          - "5.15"
          - "6.1"
          - "6.6"
      BUILD_METHOD:
        description: "ÁºñËØëÊñπÂºè"
        type: choice
        required: true
        default: gki
        options:
          - gki
          - perf
      KERNEL_NAME:
        description: "ÂÜÖÊ†∏ÂêéÁºÄÂêç"
        required: false
        default: '-FurLC'
      ZRAM:
        description: "ÊòØÂê¶ÂêØÁî®Êõ¥Â§öZRAMÔºàÊé®ËçêÂºÄÂêØÔºâ"
        type: boolean
        required: true
        default: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_DIR: /home/runner/.ccache
      CCACHE_MAXSIZE: 8G
    steps:
      - name: ÊúÄÂ§ßÂåñÊûÑÂª∫Á©∫Èó¥
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

  
      - name: ÂÆâË£ÖÁºñËØë‰æùËµñ
        run: |
          set -e
          sudo apt update
          sudo apt install -y python3 git curl ccache unzip libelf-dev lld llvm clang llvm-dev
   
      - name: Ê£ÄÂá∫‰ªìÂ∫ì
        uses: actions/checkout@v4

   
      - name: ‰∏ãËΩΩmanifestÂπ∂ÁîüÊàêccacheÂìàÂ∏å
        id: manifest_hash
        run: |
          set -e
          mkdir -p kernel_workspace
          curl --retry 3 -LSs "https://raw.githubusercontent.com/OnePlusOSS/kernel_manifest/refs/heads/oneplus/${{ github.event.inputs.CPU }}/${{ github.event.inputs.FEIL }}.xml" \
            -o kernel_workspace/${{ github.event.inputs.FEIL }}.xml
          echo "hash=$(sha256sum kernel_workspace/${{ github.event.inputs.FEIL }}.xml | awk '{print $1}')" >> $GITHUB_OUTPUT
  
      - name: ÊÅ¢Â§çccacheÁºìÂ≠ò
        uses: actions/cache@v3
        with:
          path: /home/runner/.ccache
          key: ccache-${{ runner.os }}-${{ github.event.inputs.CPU }}-${{ github.event.inputs.FEIL }}-${{ github.event.inputs.KERNEL_VERSION }}-${{ steps.manifest_hash.outputs.hash }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.event.inputs.CPU }}-
   
      - name: ÈÖçÁΩÆGit‰ø°ÊÅØ
        run: |
          set -e
          git config --global user.name "FurLC"
          git config --global user.email "qq441791056@163.com"
  
      - name: ÂÆâË£ÖrepoÂ∑•ÂÖ∑
        run: |
          set -e
          curl --retry 3 https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo
  
      - name: ÂàùÂßãÂåñrepoÂπ∂ÂêåÊ≠•Ê∫êÁ†Å
        run: |
          set -e
          mkdir -p kernel_workspace
          cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b refs/heads/oneplus/${{ github.event.inputs.CPU }} \
            -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync --force-sync --no-tags --no-clone-bundle -j$(nproc)
          # Ê∏ÖÁêÜabiÂØºÂá∫Âíå-dirtyÊ†áËÆ∞
          rm kernel_platform/common/android/abi_gki_protected_exports_* || true
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || true
          for script in kernel_platform/common/scripts/setlocalversion kernel_platform/msm-kernel/scripts/setlocalversion kernel_platform/external/dtc/scripts/setlocalversion; do
            sed -i 's/ -dirty//g' "$script"
            sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' "$script"
            sed -i '$s|echo "\$res"|echo "${{ github.event.inputs.KERNEL_NAME }}"|' "$script"
          done
  
      - name: Ê≥®ÂÖ•KernelSU-SukiSU Ultra
        run: |
          set -e
          cd kernel_workspace/kernel_platform
          curl --retry 3 -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
          cd KernelSU
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10606)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
  
      - name: ËÆæÁΩÆsusfsÂπ∂Â∫îÁî®‰∏ªË°•‰∏Å
        run: |
          set -e
          # ‰∏ãËΩΩÁõ∏ÂÖ≥ÂÜÖÂÆπ
          cd kernel_workspace
          git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git \
            -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone --depth=1 https://github.com/SukiSU-Ultra/SukiSU_patch.git
          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 3 https://raw.githubusercontent.com/FurLC/Action_OnePlus_KernelSU_SUSFS/main/ogki2gki.patch
          wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 3 https://raw.githubusercontent.com/FurLC/Action_OnePlus_KernelSU_SUSFS/main/ogki2gki_c99fix.patch
          # Ê∑ªÂä†susfsË°•‰∏Å
          cd kernel_platform
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../SukiSU_patch/hooks/syscall_hooks.patch ./common/
          cp ../SukiSU_patch/69_hide_stuff.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # Ê∑ªÂä†okiË°•‰∏Å
          cp ../ogki2gki.patch ./common/
          cp ../ogki2gki_c99fix.patch ./common/
          # Ê∑ªÂä†zramË°•‰∏Å
          if [[ "${{ github.event.inputs.ZRAM }}" == "true" ]]; then
            cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux
            cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib
            cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto
            cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/
          fi
          
          cd ./common/
          #  PATCH_FILE=50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch
          #  if [[ -f "$PATCH_FILE" ]]; then
          #    sed -i 's/-32,12 +32,38/-32,11 +32,37/g' "$PATCH_FILE"
          #    sed -i '/#include <trace\/hooks\/fs.h>/d' "$PATCH_FILE"
          #    patch -p1 < "$PATCH_FILE" || true
          #  fi
          # Â∫îÁî®susfsË°•‰∏Å
          patch -p1 < 50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch || true
          patch -p1 -F 3 < syscall_hooks.patch || true
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 -F 3 < ogki2gki_c99fix.patch
          echo "‚úÖ SUSFS Âíå syscall_hooks patch Â∫îÁî®ÂÆåÊàê"
 
      - name: Â∫îÁî®zramÁõ∏ÂÖ≥Ë°•‰∏Å
        run: |
          set -e
          cd kernel_workspace/kernel_platform/common
          PATCH_LIST=(
            "lz4kd"
            "lz4k_oplus"
          )
          PATCH_BASE=../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}
          for PATCH_NAME in "${PATCH_LIST[@]}"; do
            PATCH_FILE="$PATCH_BASE/$PATCH_NAME.patch"
            LOCAL_PATCH="./$PATCH_NAME.patch"
            if [[ -f "$PATCH_FILE" ]]; then
              echo "üü¢ Â∫îÁî®Ë°•‰∏Å: $PATCH_NAME"
              cp "$PATCH_FILE" "$LOCAL_PATCH"
              patch -p1 -F 3 < "$LOCAL_PATCH" || echo "‚ö†Ô∏è $PATCH_NAME patchÂ§±Ë¥•(Â∑≤Â∫îÁî®/ÂÜ≤Á™ÅÂèØÂøΩÁï•)"
            else
              echo "‚ùó Êú™ÊâæÂà∞$PATCH_NAMEË°•‰∏Å (kernel version ${{ github.event.inputs.KERNEL_VERSION }})"
            fi
          done
 
      - name: ÂÜôÂÖ•SUSFS‰∏éZRAMÂÜÖÊ†∏ÈÖçÁΩÆÂèäÊÄßËÉΩ‰ºòÂåñ
        run: |
          set -e
          cd kernel_workspace/kernel_platform
          DEFCONFIG=./common/arch/arm64/configs/gki_defconfig
          
          # SUSFS/KSU Âü∫Á°ÄÈÖçÁΩÆ
          echo "# SUSFS/KSUÂü∫Á°ÄÈÖçÁΩÆ"                                  >> "$DEFCONFIG"
          echo "CONFIG_KSU=y"                                        >> "$DEFCONFIG"  # ÂêØÁî®KernelSU
          echo "CONFIG_KPM=y"                                        >> "$DEFCONFIG"  # ÂêØÁî®Kernel Patch Manager
          echo "CONFIG_KSU_SUSFS_SUS_SU=n"                           >> "$DEFCONFIG"  # SUSFS suÂÖºÂÆπÊ®°ÂºèÔºàÂÖ≥Èó≠Ôºâ
          echo "CONFIG_KSU_MANUAL_HOOK=y"                            >> "$DEFCONFIG"  # ÊâãÂä®ÊåÇÈí©
          echo "CONFIG_KSU_SUSFS=y"                                  >> "$DEFCONFIG"  # ÂêØÁî®SUSFS
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"                  >> "$DEFCONFIG"  # Magic MountÁâπÊÄß
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y"                         >> "$DEFCONFIG"  # SUSFSË∑ØÂæÑÊîØÊåÅ
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y"                        >> "$DEFCONFIG"  # SUSFSÊåÇËΩΩÁÇπÊîØÊåÅ
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"   >> "$DEFCONFIG"  # Ëá™Âä®Ê∑ªÂä†ÈªòËÆ§ÊåÇËΩΩ
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"          >> "$DEFCONFIG"  # Ëá™Âä®Ê∑ªÂä†BINDÊåÇËΩΩ
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y"                        >> "$DEFCONFIG"  # ÂêØÁî®SUSFS KSTATÊîØÊåÅ
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n"                    >> "$DEFCONFIG"  # ÂÖ≥Èó≠SUSFS OverlayFS
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"                       >> "$DEFCONFIG"  # Â∞ùËØïËá™Âä®Âç∏ËΩΩ
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> "$DEFCONFIG" # BINDÊåÇËΩΩËá™Âä®Âç∏ËΩΩ
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"                      >> "$DEFCONFIG"  # ‰º™Ë£ÖUNAME
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y"                       >> "$DEFCONFIG"  # ÂêØÁî®Êó•Âøó
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"           >> "$DEFCONFIG"  # ÈöêËóèKSU/SUSFSÁ¨¶Âè∑
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"      >> "$DEFCONFIG"  # ‰º™Ë£Öcmdline/bootconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"                    >> "$DEFCONFIG"  # ÊâìÂºÄÈáçÂÆöÂêëÊîØÊåÅ
         
          # Â¶ÇÊûúÂêØÁî®ZRAMÔºåÂÜôÂÖ•ZRAMÁõ∏ÂÖ≥ÈÖçÁΩÆ
          if [[ "${{ github.event.inputs.ZRAM }}" == "true" ]]; then
            # ÂêØÁî®ZRAMÂéãÁº©ÁÆóÊ≥ïÊîØÊåÅ
            echo "CONFIG_CRYPTO_LZ4KD=y"      >> "$DEFCONFIG"  # LZ4KDÂéãÁº©ÁÆóÊ≥ï
            echo "CONFIG_CRYPTO_LZ4K_OPLUS=y" >> "$DEFCONFIG"  # OPLUSÂÆöÂà∂LZ4K
            echo "CONFIG_ZRAM_WRITEBACK=y"    >> "$DEFCONFIG"  # ÂêØÁî®ZRAMÂÜôÂõûÊîØÊåÅ
          fi
          
          # Âà†Èô§check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Ê≥®ÂÖ•sched_extË∞ÉÂ∫¶Ê®°Âùó
        if: ${{ github.event.inputs.KERNEL_VERSION == '6.6' }}
        run: |
          set -e
          cd kernel_workspace/kernel_platform/
          git clone --depth=1 https://github.com/HanKuCha/sched_ext.git
          cp -r sched_ext/* common/kernel/sched
          rm -rf sched_ext/.git
          cd common/kernel/sched
  
      - name: ÁºñËØëÂÜÖÊ†∏
        run: |
          set -e
          cd kernel_workspace/kernel_platform/common
          if [[ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.1" ]]; then
            export PATH="$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH"
            export PATH="/usr/lib/ccache:$PATH"
            make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld  HOSTLD=ld.lld O=out gki_defconfig all
          elif [[ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.6" ]]; then
            export PATH="$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH"
            export PATH="/usr/lib/ccache:$PATH"
            make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld  HOSTLD=ld.lld O=out gki_defconfig all
          else
            cd $GITHUB_WORKSPACE/kernel_workspace
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}
          fi
  
      - name: Âà∂‰ΩúAnyKernel3ÂÜÖÊ†∏Âà∑Êú∫ÂåÖ
        run: |
          set -e
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3 AnyKernel3-no_kpm
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3 AnyKernel3-kpm
          rm -rf AnyKernel3-{kpm,no_kpm}/.git
          rm -f AnyKernel3-{kpm,no_kpm}/push.sh
          KERNEL_OUT_DIRS=(
            "kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/"
            "kernel_workspace/kernel_platform/bazel-out/k8-fastbuild/bin/msm-kernel/${{ github.event.inputs.CPUD }}_gki_kbuild_mixed_tree/"
            "kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/"
            "kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/gki_kernel/common/arch/arm64/boot/"
            "kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/gki_kernel/common/arch/arm64/boot/"
          )
          image_path=""
          for dir in "${KERNEL_OUT_DIRS[@]}"; do
            if [[ -f "${dir}Image" ]]; then
              image_path="${dir}Image"
              break
            fi
          done
          if [[ -z "$image_path" ]]; then
            image_path=$(find kernel_workspace/kernel_platform/common/out/ -name "Image" | head -n 1)
          fi
          if [[ -n "$image_path" && -f "$image_path" ]]; then
            cp "$image_path" AnyKernel3-no_kpm/Image
            echo "IMAGE_PATH=$image_path" >> $GITHUB_ENV
          else
            echo "Êú™ÊâæÂà∞ Image Êñá‰ª∂ÔºåÊûÑÂª∫ÂèØËÉΩÂ§±Ë¥•"
            exit 1
          fi
 
      - name: Remove _uv suffix from FEIL
        id: feil_clean
        run: |
          set -e
          clean_feil="${{ github.event.inputs.FEIL }}"
          clean_feil="${clean_feil%_v}"  # ÂéªÊéâÁªìÂ∞æÁöÑ _vÔºàÂ¶ÇÊûúÊúâÔºâ
          clean_feil="${clean_feil%_u}"  # ÂéªÊéâÁªìÂ∞æÁöÑ _uÔºàÂ¶ÇÊûúÊúâÔºâ
          echo "value=$clean_feil" >> $GITHUB_OUTPUT
  
      - name: ‰∏ä‰º†AnyKernel3 (No_KPM)
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SukiSU_Ultra_${{ env.KSUVER }}_${{ steps.feil_clean.outputs.value }}_NoKPM
          path: AnyKernel3-no_kpm/*

      - name: Â∫îÁî®KPMË°•‰∏ÅÂπ∂Âà∂‰ΩúKPMÂà∑Êú∫ÂåÖ
        run: |
          set -e
          echo "‰ΩøÁî®ÁöÑ Image Ë∑ØÂæÑÊòØ: $IMAGE_PATH"
          cd "$(dirname "$IMAGE_PATH")"
          cp Image $GITHUB_WORKSPACE/AnyKernel3-no_kpm/Image
          curl --retry 3 -LO https://github.com/ShirkNeko/SukiSU_KernelPatch_patch/releases/download/0.11-beta/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3-kpm/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel
      - name: ‰∏ä‰º†AnyKernel3 (KPM)
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SukiSU_Ultra_${{ env.KSUVER }}_${{ steps.feil_clean.outputs.value }}_KPM
          path: AnyKernel3-kpm/*

      - name: ‰∏ãËΩΩÂπ∂Ëß£ÂéãzramÂÜÖÊ†∏Ê®°Âùó
        if: ${{ github.event.inputs.ZRAM == 'true' }}
        run: |
          set -e
          sudo apt install -y unzip
          curl -s https://api.github.com/repos/FurLC/ZRAM-Module/releases/latest | \
            grep "browser_download_url" | grep "ZRAM-Module-.*\.zip" | cut -d '"' -f 4 | xargs wget -N
          unzip "$(ls -t ZRAM-Module-*.zip | head -1)" -d ZRAM-Module
          zram1="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/"
          zram2="./kernel_workspace/kernel_platform/out/dist/"
          zram3="./kernel_workspace/kernel_platform/out/vendor/oplus/kernel/mm/"
          zram4="./kernel_workspace/device/qcom/${{ github.event.inputs.CPUD }}-kernel/vendor_dlkm/"
          zram5="./kernel_workspace/device/qcom/${{ github.event.inputs.CPUD }}-kernel/system_dlkm/flatten/lib/modules/"
          zram6="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/msm-kernel/mm/oplus_mm/hybridswap_zram/"
          zram7="./kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/msm-kernel/mm/oplus_bsp_hybridswap_zram/"
          target="./ZRAM-Module/zram/zram.ko"
          for dir in "$zram1" "$zram2" "$zram3" "$zram4" "$zram5" "$zram6" "$zram7"; do
            zram_path=$(find "$dir" -name "zram.ko" | head -n 1)
            [ -n "$zram_path" ] && break
          done
          if [ -z "$zram_path" ]; then
            zram_path=$(find "./kernel_workspace" -name "zram.ko" | head -n 1)
          fi
          if [ -n "$zram_path" ] && [ -f "$zram_path" ]; then
            echo "ZRAM module file located at: $zram_path"
            mkdir -p "$(dirname "$target")"
            if [ "$(realpath "$zram_path")" != "$(realpath "$target")" ]; then
              cp "$zram_path" "$target"
            else
              echo "Ê∫êÊñá‰ª∂‰∏éÁõÆÊ†áÁõ∏ÂêåÔºåË∑≥ËøáÂ§çÂà∂"
            fi
          else
            echo "Êú™ÊâæÂà∞ zram.ko Êñá‰ª∂ÔºåÊûÑÂª∫ÂèØËÉΩÂ§±Ë¥•"
            exit 1
          fi
 
      - name: ‰∏ä‰º†ZRAM-Module
        uses: actions/upload-artifact@v4
        if: ${{ github.event.inputs.ZRAM == 'true' }}
        with:
          name: ZRAM-Module_${{ github.event.inputs.KERNEL_VERSION }}_${{ steps.feil_clean.outputs.value }}
          path: ZRAM-Module/*
